!function(e){e.extend({mediaQuery:function(){function e(e,r){throw{name:e,message:r}}function r(e){return i=e.charAt(a),a++,i}function n(r){return s.comparison[r]||s.logic[r]||s.number[r]||s.space[r]?!0:void e("Parse Error","Expected number or comparison or logic operator, and instead received: "+r)}function o(e){var o={logic:[],comparison:[],number:[]},t=0,c=0;for(a=0;a<e.length;){r(e);try{n(i)}catch(u){return void void 0}s.logic[i]&&1>t?(o.logic[c]=i,t++):s.logic[i]&&1===t&&(o.logic[c]+=i,c++,t=0),s.comparison[i]&&void 0===o.comparison[c]?o.comparison[c]=i:s.comparison[i]&&(o.comparison[c]+=i),s.number[i]&&void 0===o.number[c]?o.number[c]=i:s.number[i]&&(o.number[c]+=i)}return o}function t(r,n){var t;try{"string"==typeof r?t=o(r):e("Data Type Error",'The possible data types for arguments are: (callback, string) || (string). Queries can be chained by including them in one string separated by the || operator, e.g. ">768 || <1024"')}catch(a){return void void 0}for(var i=[],s=!1,c=0;c<t.number.length;c++)switch(t.comparison[c]){case"<":window.innerWidth<t.number[c]?i.push("true"):i.push("false");break;case">":window.innerWidth>t.number[c]?i.push("true"):i.push("false");break;case">=":window.innerWidth>=t.number[c]?i.push("true"):i.push("false");break;case"<=":window.innerWidth<=t.number[c]?i.push("true"):i.push("false");break;case"=":window.innerWidth===parseInt(t.number[c])?i.push("true"):i.push("false");break;default:try{e("Syntax Error","Incorrect comparison operator. Received: "+t.comparison[c])}catch(a){void 0,s=!0}}if(s)return!1;var u=[!0,t];return i.forEach(function(e){return"false"===e?void(u[0]=!1):void 0}),"true"===n?u:u[0]}var a,i,s={comparison:{"<":"<",">":">","=":"="},logic:{"&":"&","|":"|"},number:{0:"0",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9"},space:{" ":" "}},c=Array.prototype.slice.call(arguments);try{"string"!=typeof c[0]&&"function"!=typeof c[0]&&e("Data Type Error","The possible data types for arguments are: (callback, string) || (string)")}catch(u){return void void 0}if("string"==typeof c[0]&&"undefined"==typeof c[1])return t(c[0]);if("string"==typeof c[0]&&"string"==typeof c[1])try{e("Arguments Error",'Please keep queries confined to one string separated by the || operator, e.g. ">768 || <1024"')}catch(u){void 0}"function"==typeof c[0]&&"string"===c[1]}})}(jQuery);