!function(e){function n(e,n){this.name=e,this.message=n}e.extend({mediaQuery:function(){function e(e){if(c.comparison[e]||c.logic[e]||c.value[e]||c.space[e])return!0;throw new n("Verify character failed","The passed string contains an invalid character. Received: "+ch)}function r(n,r){var t=n.charAt(r);try{e(t)}catch(o){return}return t}function t(e){for(var a="",i=0;i<e.length;){var s=r(e,i);if(i++,e.indexOf("(")>=0&&e.indexOf(")")<0)try{throw new n("Syntax Error","A close parenthesis is missing")}catch(d){return}else if(e.indexOf("(")>-1||e.indexOf(")")>-1)if("("===c.logic[s]){var l=t(e.slice(i));a+=l.parsedUnit,i+=l.indexesToSkip+1}else{if(")"===c.logic[s]){var u={parsedUnit:o(a),indexesToSkip:a.length};return u}a+=s}else a+=s}var f=o(a);try{if("undefined"==typeof f)throw new n("Syntax Error","One of the expressions returned undefined, meaning there is a syntax error")}catch(d){return}return f}function o(e){try{if(e.indexOf("undefined")>-1)throw new n("Syntax Error","An unacceptable character was passed that became undefined")}catch(t){return}for(var o={value:[],comparison:[],logic:[]},i=0,s=0,d=0;d<e.length;){var l=r(e,d);d++,c.logic[l]&&1>i?(o.logic[s]=l,i++):c.logic[l]&&1===i&&(o.logic[s]+=l,s++,i=0),c.comparison[l]&&void 0===o.comparison[s]?o.comparison[s]=l:c.comparison[l]&&(o.comparison[s]+=l),c.value[l]&&void 0===o.value[s]?o.value[s]=l:c.value[l]&&(o.value[s]+=l)}return a(o)}function a(e){for(var r=[],t=!0,o=0;o<(0===e.logic.length?1:e.logic.length);){try{if(0===e.logic.length)r.push(i(e.comparison[o],e.value[o]));else if("&&"===e.logic[o])r.push(i(e.comparison[o],e.value[o])&&i(e.comparison[o+1],e.value[o+1]));else if("||"===e.logic[o])r.push(i(e.comparison[o],e.value[o])||i(e.comparison[o+1],e.value[o+1]));else if(e.logic.length<e.value.length-1)throw new n("Logic Error","Too few logic operators found -- please check your syntax. Number of logic operators: "+e.logic.length+" vs number of values: "+e.value.length+". logic.length should always be === to (value.length - 1)")}catch(a){return}o++}return r.forEach(function(e){e===!1||"false"===e?t=!1:void 0===e&&(t=void 0)}),t}function i(e,r){var t;try{if("true"!==r&&"false"!==r)switch(e){case"<":t=window.innerWidth<r;break;case">":t=window.innerWidth>r;break;case">=":t=window.innerWidth>=r;break;case"<=":t=window.innerWidth<=r;break;case"=":t=window.innerWidth===parseInt(r);break;default:if("true"!==r&&"false"!==r&&"undefined"==typeof e)throw new n("Syntax Error","Missing comparison operator.");if("true"!==r&&"false"!==r)throw new n("Syntax Error","Incorrect comparison operator. Received: "+e)}else if("true"===r)t=!0;else{if("false"!==r)throw new n("Data Type Error","Expected number or true or false in eval function, instead received "+r);t=!1}}catch(o){return}return t}var c={comparison:{"<":"<",">":">","=":"="},logic:{"&":"&","|":"|","(":"(",")":")"},value:{0:"0",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9",t:"t",r:"r",u:"u",e:"e",f:"f",a:"a",l:"l",s:"s"},space:{" ":" "}},s=Array.prototype.slice.call(arguments);try{if("string"!=typeof s[0])throw new n("Data Type Error",'Please only pass one string argument with an optional boolean to include the raw and evaluated data instead. Queries can be chained by including them in one string separated by the && operator, e.g. ">768 && <1024"');if("string"==typeof s[0]&&"boolean"!=typeof s[1]&&"undefined"!=typeof s[1])throw new n("Data Type Error","The second argument must be a boolean, which will determine whether the method returns the raw and evaluated data instead.");if(s.length>2)throw new n("Too Many Aguments",'Please only pass one string argument with an optional boolean to include the raw and evaluated data instead. Queries can be chained by including them in one string separated by logic operators, e.g. "(>768 && <1024) || (<320 && >1600)"')}catch(d){return}return t(s[0])}}),e.fn.mediaQuery=function(r,t,o,a){function i(n,i){e.mediaQuery(r)?void 0===a||a?d&&(t.bind(null,n),d=!1):a||t.bind(null,n):e.mediaQuery(r)||(void 0===a||a?(d=!i,d||"function"!=typeof o||(o.bind(null,n),d=!0)):a||"function"!=typeof o||o.bind(null,n))}var c={firstArg:["string"],secondArg:["function"],thirdArg:["function","boolean","undefined"],fourthArg:["boolean","undefined"]};try{if(c.firstArg.indexOf(typeof r)<0||c.secondArg.indexOf(typeof t)<0)throw new n("Data Type Error","Expected first and second arguments to be a string and function, respectively, and instead received a(n) "+typeof arguments[0]+" and "+typeof arguments[1]);if(c.thirdArg.indexOf(typeof o)<0)throw new n("Data Type Error","Expected optional third argument to be a function, boolean, or undefined, and intead received a(n) "+typeof arguments[2]);if(c.fourthArg.indexOf(typeof a)<0)throw new n("Data Type Error","Expected optional fourth and final argument to be a boolean or undefined, and instead received a(n) "+typeof arguments[3]);if(arguments.length>4)throw new n("Too many arguments","Please only pass up to four arguments with the following data types: string, function[, function||boolean[, boolean]]. Instead received "+arguments.length+" arguments.")}catch(s){return}"boolean"==typeof o&&(a=o);var d=!0,l=this;"complete"===document.readyState&&i(e(l),!0),e(document).on("ready",function(){i(e(l),!0)}),e(window).on("resize",function(){i(e(l))})}}(jQuery);